const registerUser = require('./auth'); describe('registerUser', () => { beforeEach(() => { jest.useFakeTimers(); document.getElementById('messageReg').style.display = 'none'; }); test('не должен отправлять форму, если любое поле пусто', () => { document.getElementsByName('firstName')[0].value = ''; registerUser(); expect(document.getElementById('messageReg').style.display).toBe('none'); }); test('не должен отправлять форму, если email некорректный', () => { document.getElementsByName('firstName')[0].value = 'John'; document.getElementsByName('email')[0].value = 'invalid-email'; registerUser(); expect(document.getElementById('messageReg').style.display).toBe('none'); }); test('должен отправить форму, если все поля корректны', () => { document.getElementsByName('firstName')[0].value = 'John'; document.getElementsByName('email')[0].value = 'john.doe@example.com'; registerUser(); expect(document.getElementById('messageReg').style.display).toBe('block'); expect(document.getElementById('messageReg').innerHTML).toBe('Регистрация прошла успешно. Теперь вы можете войти.'); }); test('должен очистить форму после отправки', () => { registerUser(); expect(document.getElementsByName('firstName')[0].value).toBe(''); expect(document.getElementsByName('lastName')[0].value).toBe(''); expect(document.getElementsByName('surName')[0].value).toBe(''); expect(document.getElementsByName('phonereg')[0].value).toBe(''); expect(document.getElementsByName('email')[0].value).toBe(''); expect(document.getElementsByName('passwordreg')[0].value).toBe(''); }); test('должен скрыть сообщение через 5 секунд и перенаправить', () => { registerUser(); jest.runAllTimers(); expect(document.getElementById('messageReg').style.display).toBe('none'); expect(window.location.href).toBe('auth.php'); }); });